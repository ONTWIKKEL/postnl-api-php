<?php

declare(strict_types=1);

/**
 * The MIT License (MIT).
 *
 * Copyright (c) 2017-2020 Michael Dekker (https://github.com/firstred)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author    Michael Dekker <git@michaeldekker.nl>
 * @copyright 2017-2020 Michael Dekker
 * @license   https://opensource.org/licenses/MIT The MIT License
 */

namespace Firstred\PostNL\Entity;

use Firstred\PostNL\Exception\InvalidArgumentException;

/**
 * Class Shipment.
 */
final class Shipment extends AbstractEntity implements ShipmentInterface
{
    /**
     * Addresses.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var AddressInterface[]|null
     *
     * @since   1.0.0
     */
    private $address;

    /**
     * Addresses.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var AddressInterface[]|null
     *
     * @since   1.0.0
     */
    private $addresses;

    /**
     * Amounts.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var AmountInterface[]|null
     *
     * @since   1.0.0
     */
    private $amounts;

    /**
     * Main barcode.
     *
     * @pattern ^.{1,35}$
     *
     * @example 3SDEVC2016112104
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $mainBarcode;

    /**
     * Barcode.
     *
     * @pattern ^.{1,35}$
     *
     * @example 3SDEVC2016112104
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $barcode;

    /**
     * Code used for logistic purposes (usually generated by the service itself when needed).
     *
     * @pattern ^.{0,35}$
     *
     * @example #2426A3A#03#0306#
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $codingText;

    /**
     * Ending date/time of the collection of the shipment. Format: d-m-Y H:i:s.
     *
     * @pattern ^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-[0-9]{4}\s(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$
     *
     * @example 03-07-2019 17:00:00
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $collectionTimeStampEnd;

    /**
     * Starting date/time of the collection of the shipment. Format: d-m-Y H:i:s.
     *
     * @pattern ^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-[0-9]{4}\s(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$
     *
     * @example 03-07-2019 16:00:00
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $collectionTimeStampStart;

    /**
     * One or more Contact elements belonging to a shipment. Mandatory in some cases. Please refer to the Guidelines.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var ContactInterface[]|null
     *
     * @since   1.0.0
     */
    private $contacts;

    /**
     * Content of the shipment. Mandatory for Extra@Home shipments.
     *
     * @pattern ^.{0,35}$
     *
     * @example Media player
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $content;

    /**
     * Cost center of the shipment.
     * This value will appear on your invoice.
     *
     * @pattern ^.{0,35}$
     *
     * @example SX-GT-66
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $costCenter;

    /**
     * Customer.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var CustomerInterface|null
     *
     * @since   2.0.0
     */
    private $customer;

    /**
     * Order number of the customer.
     *
     * @pattern ^.{0,35}$
     *
     * @example 8689242390
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $customerOrderNumber;

    /**
     * The Customs type is mandatory for GlobalPack shipments and not allowed for any other shipment types.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var CustomsInterface|null
     *
     * @since   1.0.0
     */
    private $customs;

    /**
     * Delivery address type.
     *
     * @pattern pattern: ^\d{2}$
     *
     * @example 09
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $deliveryAddress;

    /**
     * The delivery date and the specific starting time of the shipment delivery. This can be retrieved from the DeliveryDate webservice using the MyTime delivery option. Format: d-m-Y H:i:s.
     *
     * @pattern ^(?:[0-3]\d-[01]\d-[12]\d{3}\s+)[0-2]\d:[0-5]\d(?:[0-5]\d)$
     *
     * @example 03-07-2019 14:30:00
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $deliveryTimeStampStart;

    /**
     * The delivery date and the specific end time of the shipment delivery. This can be retrieved from the DeliveryDate webservice using the MyTime delivery option. Format: d-m-Y H:i:s.
     *
     * @pattern ^(?:[0-3]\d-[01]\d-[12]\d{3}\s+)[0-2]\d:[0-5]\d(?:[0-5]\d)$
     *
     * @example 03-07-2019 16:30:00
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $deliveryTimeStampEnd;

    /**
     * The delivery date of the shipment. We strongly advice to use the DeliveryDate service to get this date when using delivery options like Evening/Morning/Sameday delivery etc. For those
     * products, this field is mandatory (please regard the Guidelines section). Format: d-m-Y H:i:s.
     *
     * @pattern ^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-[0-9]{4}\s(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$
     *
     * @example 03-07-2019 14:00:00
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $deliveryDate;

    /**
     * Dimension.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var DimensionInterface|null
     *
     * @since   1.0.0
     */
    private $dimension;

    /**
     * GenerateBarcodeRequest of the downstream network partner of PostNL Pakketten.
     * Madatory for requesting GlobalPack combilabel product codes.
     *
     * @pattern ^.{0,35}$
     *
     * @example CD123456785NL
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $downPartnerBarcode;

    /**
     * Identification of the downstream network partner of PostNL Pakketten.
     * Mandatory for Pickup at PostNl Location Belgium. Use the data from the Location API response; attribute RetailNetworkID.
     *
     * @pattern ^.{0,35}$
     *
     * @example LD-01
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $downPartnerID;

    /**
     * Identification of the location of the downstream network partner of PostNL Pakketten.
     *
     * @pattern ^.{0,10}$
     *
     * @example BE0Q82
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $downPartnerLocation;

    /**
     * List of 0 or more Group types with data, grouping multiple shipments together.
     * Mandatory for multicollo shipments. Please see Guidelines (Multiple shipments) for more information.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var GroupInterface[]|null
     *
     * @since   1.0.0
     */
    private $groups;

    /**
     * Expiration date of the ID document.
     * Mandatory for ID Check products.
     *
     * @pattern  ^(?:[0-3]\d-[01]\d-[12]\d{3})$
     *
     * @example  05-07-2019
     *
     * @var string|null
     *
     * @since    1.0.0
     */
    private $IDExpiration;

    /**
     * Document number of the ID document
     * Mandatory for ID Check products.
     *
     * @pattern ^.{0,20}$
     *
     * @example 4261103214
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $IDNumber;

    /**
     * Type of the ID document.
     * Mandatory for ID Check products.
     *
     * @pattern ^\d{2}$
     *
     * @example 02
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $IDType;

    /**
     * Product code.
     *
     * @pattern ^\d{4}$
     *
     * @example 3153
     *
     * @var string|null
     * @var string|null
     *
     * @since   2.0.0
     */
    private $productCode;

    /**
     * Second product code of a shipment.
     *
     * @pattern ^\d{4}$
     *
     * @example 3153
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $productCodeCollect;

    /**
     * Product code of the shipment.
     *
     * @pattern ^\d{4}$
     *
     * @example 3085
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $productCodeDelivery;

    /**
     * Product description.
     *
     * @pattern ^.{0,1000}$
     *
     * @example Standaardzending
     *
     * @var string|null
     *
     * @since   2.0.0
     */
    private $productDescription;

    /**
     * Product options for the shipment, mandatory for certain products, see the Products page of this webservice.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var ProductOptionInterface[]|null
     *
     * @since   1.0.0
     */
    private $productOptions;

    /**
     * Date of birth
     * Mandatory for Age check products.
     *
     * @pattern  ^(?:[0-3]\d-[01]\d-[12]\d{3})$
     *
     * @example  01-01-1970
     *
     * @var string|null
     *
     * @since    1.0.0
     */
    private $receiverDateOfBirth;

    /**
     * Your own reference of the shipment. Mandatory for Extra@Home shipments; for E@H this is used to create your order number, so this should be unique for each request.
     *
     * @pattern ^.{0,35}$
     *
     * @example 2016014567
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $reference;

    /**
     * Additional reference of the collect order of the shipment.
     *
     * @pattern ^.{0,35}$
     *
     * @example 6659150
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $referenceCollect;

    /**
     * Remark of the shipment.
     *
     * @pattern ^.{0,35}$
     *
     * @example Fragile
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $remark;

    /**
     * Return barcode of the shipment. PostNL will provide you with a separate customer code specifically for generating the returnBarcode.
     *
     * Mandatory for Label in the Box (return label) shipments.
     *
     * @pattern ^.{11,15}$
     *
     * @example 3SABCD7762162
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $returnBarcode;

    /**
     * Return reference of the shipment.
     *
     * @pattern ^.{0,35}$
     *
     * @example 112233
     *
     * @var string|null
     *
     * @since   1.0.0
     */
    private $returnReference;

    /**
     * Shipment amount.
     *
     * @pattern ^\d{0,10}$
     *
     * @example 1
     *
     * @var int|null
     *
     * @since   2.0.0
     */
    private $shipmentAmount;

    /**
     * Shipment counter.
     *
     * @pattern ^\d{0,10}$
     *
     * @example 1
     *
     * @var int|null
     *
     * @since   2.0.0
     */
    private $shipmentCounter;

    /**
     * Event.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var EventInterface[]|null
     *
     * @since   2.0.0
     */
    private $event;

    /**
     * Status.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var StatusInterface|null
     *
     * @since   2.0.0
     */
    private $status;

    /**
     * Old status.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var OldStatusInterface[]|null
     *
     * @since   2.0.0
     */
    private $oldStatus;

    /**
     * Labels.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @var LabelInterface[]|null
     *
     * @since   2.0.0
     */
    private $labels;

    /**
     * Deserialize JSON.
     *
     * @noinspection PhpDocRedundantThrowsInspection
     *
     * @param array $json JSON as associative array
     *
     * @return mixed
     *
     * @throws InvalidArgumentException
     *
     * @since        2.0.0
     */
    public static function jsonDeserialize(array $json)
    {
        reset($json);
        $shortClassName = key($json);
        $fullClassName = static::getFullEntityClassName($shortClassName);
        // The only key in this associate array should be the object's name
        // The value should be the object itself

        if (!$fullClassName
            || !class_exists($fullClassName)
            || !is_array($json[$shortClassName])
            || count(array_filter(array_keys($json[$shortClassName]), 'is_int')) > 0
        ) {
            // If it's not a known object or a non-associative array, just return the direct property
            return $json[$shortClassName];
        }

        $object = new static();
        foreach ($json[$shortClassName] as $key => $value) {
            if ('Labels' === $key) {
                if (isset($value['Content'])) {
                    $value = [$value];
                }
                foreach ($value as $label) {
                    $object->addLabel(Label::jsonDeserialize(['Label' => $label]));
                }
            } elseif (is_null(AbstractEntity::getFullEntityClassName($key))) {
                if (!is_array($value) || !empty($value)) {
                    $object->{"set$key"}($value);
                }
            } else {
                $object->{"set$key"}(
                    call_user_func(
                        [static::getFullEntityClassName($key), 'jsonDeserialize'],
                        [$key => $value]
                    )
                );
            }
        }

        return $object;
    }

    /**
     * Get addresses.
     *
     * @return AddressInterface[]|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$addresses
     */
    public function getAddresses(): ?array
    {
        return $this->addresses;
    }

    /**
     * Set addresses.
     *
     * @pattern N/A
     *
     * @param AddressInterface[]|null $addresses
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$addresses
     */
    public function setAddresses(?array $addresses): ShipmentInterface
    {
        $this->addresses = $addresses;

        return $this;
    }

    /**
     * Get amounts.
     *
     * @return AmountInterface[]|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$amounts
     */
    public function getAmounts(): ?array
    {
        return $this->amounts;
    }

    /**
     * Set amounts.
     *
     * @pattern N/A
     *
     * @param AmountInterface[]|null $amounts
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$amounts
     */
    public function setAmounts(?array $amounts): ShipmentInterface
    {
        $this->amounts = $amounts;

        return $this;
    }

    /**
     * Get barcode.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$barcode
     */
    public function getBarcode(): ?string
    {
        return $this->barcode;
    }

    /**
     * Set barcode.
     *
     * @pattern ^.{1,35}$
     *
     * @param string|null $barcode
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 3SDEVC2016112104
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$barcode
     */
    public function setBarcode(?string $barcode): ShipmentInterface
    {
        $this->barcode = $this->validate->barcode($barcode);

        return $this;
    }

    /**
     * Get coding text.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$codingText
     */
    public function getCodingText(): ?string
    {
        return $this->codingText;
    }

    /**
     * Set coding text.
     *
     * @pattern ^.{0,35}$
     *
     * @example #2426A3A#03#0306#
     *
     * @param string|null $codingText
     *
     * @return ShipmentInterface
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$codingText
     *
     * @throws InvalidArgumentException
     */
    public function setCodingText(?string $codingText): ShipmentInterface
    {
        $this->codingText = $this->validate->genericString($codingText);

        return $this;
    }

    /**
     * Get collection timestamp end.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$collectionTimeStampEnd
     */
    public function getCollectionTimeStampEnd(): ?string
    {
        return $this->collectionTimeStampEnd;
    }

    /**
     * Set collection timestamp end.
     *
     * @pattern ^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-[0-9]{4}\s(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$
     *
     * @param string|null $collectionTimeStampEnd
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 03-07-2019 17:00:00
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$collectionTimeStampEnd
     */
    public function setCollectionTimeStampEnd(?string $collectionTimeStampEnd): ShipmentInterface
    {
        $this->collectionTimeStampEnd = $this->validate->dateTime($collectionTimeStampEnd);

        return $this;
    }

    /**
     * Get collection timestamp start.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$collectionTimeStampStart
     */
    public function getCollectionTimeStampStart(): ?string
    {
        return $this->collectionTimeStampStart;
    }

    /**
     * Set collection timestamp start.
     *
     * @pattern ^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-[0-9]{4}\s(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$
     *
     * @param string|null $collectionTimeStampStart
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 03-07-2019 16:00:00
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$collectionTimeStampStart
     */
    public function setCollectionTimeStampStart(?string $collectionTimeStampStart): ShipmentInterface
    {
        $this->collectionTimeStampStart = $this->validate->dateTime($collectionTimeStampStart);

        return $this;
    }

    /**
     * Get contacts.
     *
     * @pattern N/A
     *
     * @return ContactInterface[]|null
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$contacts
     */
    public function getContacts(): ?array
    {
        return $this->contacts;
    }

    /**
     * Set contacts.
     *
     * @pattern N/A
     *
     * @param ContactInterface[]|null $contacts
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$contacts
     */
    public function setContacts(?array $contacts): ShipmentInterface
    {
        $this->contacts = $contacts;

        return $this;
    }

    /**
     * Get content.
     *
     * @pattern N/A
     *
     * @example N/A
     *
     * @return string|null
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$content
     */
    public function getContent(): ?string
    {
        return $this->content;
    }

    /**
     * Set content.
     *
     * @pattern N/A
     *
     * @param string|null $content
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$content
     */
    public function setContent(?string $content): ShipmentInterface
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Get cost center.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$costCenter
     */
    public function getCostCenter(): ?string
    {
        return $this->costCenter;
    }

    /**
     * Set cost center.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $costCenter
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example SX-GT-66
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$costCenter
     */
    public function setCostCenter(?string $costCenter): ShipmentInterface
    {
        $this->costCenter = $this->validate->genericString($costCenter);

        return $this;
    }

    /**
     * Get customer order number.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$customerOrderNumber
     */
    public function getCustomerOrderNumber(): ?string
    {
        return $this->customerOrderNumber;
    }

    /**
     * Set customer order number.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $customerOrderNumber
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 8689242390
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$customerOrderNumber
     */
    public function setCustomerOrderNumber(?string $customerOrderNumber): ShipmentInterface
    {
        $this->customerOrderNumber = $this->validate->genericString($customerOrderNumber);

        return $this;
    }

    /**
     * Get customs.
     *
     * @return CustomsInterface|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$customs
     */
    public function getCustoms(): ?CustomsInterface
    {
        return $this->customs;
    }

    /**
     * Set customs.
     *
     * @pattern N/A
     *
     * @param CustomsInterface|null $customs
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$customs
     */
    public function setCustoms(?CustomsInterface $customs): ShipmentInterface
    {
        $this->customs = $customs;

        return $this;
    }

    /**
     * Get delivery address type.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$deliveryAddress
     */
    public function getDeliveryAddress(): ?string
    {
        return $this->deliveryAddress;
    }

    /**
     * Set delivery address type.
     *
     * @pattern pattern: ^\d{2}$
     *
     * @param string|null $deliveryAddress
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 09
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$deliveryAddress
     */
    public function setDeliveryAddress(?string $deliveryAddress): ShipmentInterface
    {
        $this->deliveryAddress = $this->validate->numericType($deliveryAddress);

        return $this;
    }

    /**
     * Get delivery timestamp start.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$deliveryTimeStampStart
     */
    public function getDeliveryTimeStampStart(): ?string
    {
        return $this->deliveryTimeStampStart;
    }

    /**
     * Set delivery timestamp start.
     *
     * @pattern ^(?:[0-3]\d-[01]\d-[12]\d{3}\s+)[0-2]\d:[0-5]\d(?:[0-5]\d)$
     *
     * @param string|null $deliveryTimeStampStart
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 03-07-2019 14:30:00
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$deliveryTimeStampStart
     */
    public function setDeliveryTimeStampStart(?string $deliveryTimeStampStart): ShipmentInterface
    {
        $this->deliveryTimeStampStart = $this->validate->time($deliveryTimeStampStart);

        return $this;
    }

    /**
     * Get delivery timestamp end.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$deliveryTimeStampEnd
     */
    public function getDeliveryTimeStampEnd(): ?string
    {
        return $this->deliveryTimeStampEnd;
    }

    /**
     * Set delivery timestamp end.
     *
     * @pattern ^(?:[0-3]\d-[01]\d-[12]\d{3}\s+)[0-2]\d:[0-5]\d(?:[0-5]\d)$
     *
     * @param string|null $deliveryTimeStampEnd
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 03-07-2019 16:30:00
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$deliveryTimeStampEnd
     */
    public function setDeliveryTimeStampEnd(?string $deliveryTimeStampEnd): ShipmentInterface
    {
        $this->deliveryTimeStampEnd = $this->validate->time($deliveryTimeStampEnd);

        return $this;
    }

    /**
     * Get delivery date.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$deliveryDate
     */
    public function getDeliveryDate(): ?string
    {
        return $this->deliveryDate;
    }

    /**
     * Set delivery date.
     *
     * @pattern ^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-[0-9]{4}\s(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$
     *
     * @param string|null $deliveryDate
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 03-07-2019 14:00:00
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$deliveryDate
     */
    public function setDeliveryDate(?string $deliveryDate): ShipmentInterface
    {
        $this->deliveryDate = $this->validate->dateTime($deliveryDate);

        return $this;
    }

    /**
     * Get dimension.
     *
     * @return DimensionInterface|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$dimension
     */
    public function getDimension(): ?DimensionInterface
    {
        return $this->dimension;
    }

    /**
     * Set dimension.
     *
     * @pattern N/A
     *
     * @param DimensionInterface|null $dimension
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$dimension
     */
    public function setDimension(?DimensionInterface $dimension): ShipmentInterface
    {
        $this->dimension = $dimension;

        return $this;
    }

    /**
     * Get down partner barcode.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$downPartnerBarcode
     */
    public function getDownPartnerBarcode(): ?string
    {
        return $this->downPartnerBarcode;
    }

    /**
     * Set down partner barcode.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $downPartnerBarcode
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example CD123456785NL
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$downPartnerBarcode
     */
    public function setDownPartnerBarcode(?string $downPartnerBarcode): ShipmentInterface
    {
        $this->downPartnerBarcode = $this->validate->genericString($downPartnerBarcode);

        return $this;
    }

    /**
     * Get down partner ID.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$downPartnerID
     */
    public function getDownPartnerID(): ?string
    {
        return $this->downPartnerID;
    }

    /**
     * Set down partner ID.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $downPartnerID
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example LD-01
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$downPartnerID
     */
    public function setDownPartnerID(?string $downPartnerID): ShipmentInterface
    {
        $this->downPartnerID = $this->validate->genericString($downPartnerID);

        return $this;
    }

    /**
     * Get down partner location.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$downPartnerLocation
     */
    public function getDownPartnerLocation(): ?string
    {
        return $this->downPartnerLocation;
    }

    /**
     * Set down partner location.
     *
     * @pattern ^.{0,10}$
     *
     * @param string|null $downPartnerLocation
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example BE0Q82
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$downPartnerLocation
     */
    public function setDownPartnerLocation(?string $downPartnerLocation): ShipmentInterface
    {
        $this->downPartnerLocation = $this->validate->genericString($downPartnerLocation);

        return $this;
    }

    /**
     * Get groups.
     *
     * @return GroupInterface[]|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$groups
     */
    public function getGroups(): ?array
    {
        return $this->groups;
    }

    /**
     * Set groups.
     *
     * @pattern N/A
     *
     * @param GroupInterface[]|null $groups
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$groups
     */
    public function setGroups(?array $groups): ShipmentInterface
    {
        $this->groups = $groups;

        return $this;
    }

    /**
     * Get ID expiration date.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$IDExpiration
     */
    public function getIDExpiration(): ?string
    {
        return $this->IDExpiration;
    }

    /**
     * Set ID expiration date.
     *
     * @pattern  ^(?:[0-3]\d-[01]\d-[12]\d{3})$
     *
     * @param string|null $IDExpiration
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example  05-07-2019
     *
     * @since    1.0.0
     * @since    2.0.0 Strict typing
     * @see      Shipment::$IDExpiration
     */
    public function setIDExpiration(?string $IDExpiration): ShipmentInterface
    {
        $this->IDExpiration = $this->validate->date($IDExpiration);

        return $this;
    }

    /**
     * Get ID number.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$IDNumber
     */
    public function getIDNumber(): ?string
    {
        return $this->IDNumber;
    }

    /**
     * Set ID number.
     *
     * @pattern ^.{0,20}$
     *
     * @param string|null $IDNumber
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 4261103214
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$IDNumber
     */
    public function setIDNumber(?string $IDNumber): ShipmentInterface
    {
        $this->IDNumber = $this->validate->genericString($IDNumber, 20);

        return $this;
    }

    /**
     * Get ID type.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$IDType
     */
    public function getIDType(): ?string
    {
        return $this->IDType;
    }

    /**
     * Set ID type.
     *
     * @pattern ^\d{2}$
     *
     * @param string|null $IDType
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 02
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$IDType
     */
    public function setIDType(?string $IDType): ShipmentInterface
    {
        $this->IDType = $this->validate->numericType($IDType);

        return $this;
    }

    /**
     * Get product code collect.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$productCodeCollect
     */
    public function getProductCodeCollect(): ?string
    {
        return $this->productCodeCollect;
    }

    /**
     * Set product code collect.
     *
     * @pattern ^\d{4}$
     *
     * @param string|null $productCodeCollect
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 3153
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$productCodeCollect
     */
    public function setProductCodeCollect(?string $productCodeCollect): ShipmentInterface
    {
        $this->productCodeCollect = $this->validate->productCode($productCodeCollect);

        return $this;
    }

    /**
     * Get product code delivery.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$productCodeDelivery
     */
    public function getProductCodeDelivery(): ?string
    {
        return $this->productCodeDelivery;
    }

    /**
     * Set product code delivery.
     *
     * @pattern ^\d{4}$
     *
     * @param string|null $productCodeDelivery
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 3085
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$productCodeDelivery
     */
    public function setProductCodeDelivery(?string $productCodeDelivery): ShipmentInterface
    {
        $this->productCodeDelivery = $this->validate->productCode($productCodeDelivery);

        return $this;
    }

    /**
     * Get product options.
     *
     * @return ProductOptionInterface[]|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$productOptions
     */
    public function getProductOptions(): ?array
    {
        return $this->productOptions;
    }

    /**
     * Set product options.
     *
     * @pattern N/A
     *
     * @param ProductOptionInterface[]|null $productOptions
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$productOptions
     */
    public function setProductOptions(?array $productOptions): ShipmentInterface
    {
        $this->productOptions = $productOptions;

        return $this;
    }

    /**
     * Get receiver date of birth.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$receiverDateOfBirth
     */
    public function getReceiverDateOfBirth(): ?string
    {
        return $this->receiverDateOfBirth;
    }

    /**
     * Set receiver date of birth.
     *
     * @pattern  ^(?:[0-3]\d-[01]\d-[12]\d{3})$
     *
     * @param string|null $receiverDateOfBirth
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example  01-01-1970
     *
     * @since    1.0.0
     * @since    2.0.0 Strict typing
     * @see      Shipment::$receiverDateOfBirth
     */
    public function setReceiverDateOfBirth(?string $receiverDateOfBirth): ShipmentInterface
    {
        $this->receiverDateOfBirth = $this->validate->date($receiverDateOfBirth);

        return $this;
    }

    /**
     * Get reference.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$reference
     */
    public function getReference(): ?string
    {
        return $this->reference;
    }

    /**
     * Set reference.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $reference
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 2016014567
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$reference
     */
    public function setReference(?string $reference): ShipmentInterface
    {
        $this->reference = $this->validate->genericString($reference);

        return $this;
    }

    /**
     * Get reference collect.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$referenceCollect
     */
    public function getReferenceCollect(): ?string
    {
        return $this->referenceCollect;
    }

    /**
     * Set reference collect.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $referenceCollect
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 6659150
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$referenceCollect
     */
    public function setReferenceCollect(?string $referenceCollect): ShipmentInterface
    {
        $this->referenceCollect = $this->validate->genericString($referenceCollect);

        return $this;
    }

    /**
     * Get remark.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$remark
     */
    public function getRemark(): ?string
    {
        return $this->remark;
    }

    /**
     * Set remark.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $remark
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example Fragile
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$remark
     */
    public function setRemark(?string $remark): ShipmentInterface
    {
        $this->remark = $this->validate->genericString($remark);

        return $this;
    }

    /**
     * Set remark.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$remark
     */
    public function getReturnBarcode(): ?string
    {
        return $this->returnBarcode;
    }

    /**
     * Set return barcode.
     *
     * @pattern ^.{11,15}$
     *
     * @param string|null $returnBarcode
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 3SABCD7762162
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$returnBarcode
     */
    public function setReturnBarcode(?string $returnBarcode): ShipmentInterface
    {
        $this->returnBarcode = $this->validate->barcode($returnBarcode);

        return $this;
    }

    /**
     * Get return reference.
     *
     * @return string|null
     *
     * @since 1.0.0
     * @since 2.0.0 Strict typing
     * @see   Shipment::$returnReference
     */
    public function getReturnReference(): ?string
    {
        return $this->returnReference;
    }

    /**
     * Set return reference.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $returnReference
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 112233
     *
     * @since   1.0.0
     * @since   2.0.0 Strict typing
     * @see     Shipment::$returnReference
     */
    public function setReturnReference(?string $returnReference): ShipmentInterface
    {
        $this->returnReference = $this->validate->genericString($returnReference);

        return $this;
    }

    /**
     * Get main barcode.
     *
     * @return string|null
     *
     * @since   2.0.0 Strict typing
     * @see     Shipment::$barcode
     */
    public function getMainBarcode(): ?string
    {
        return $this->mainBarcode;
    }

    /**
     * Set main barcode.
     *
     * @pattern ^{0,95}$
     *
     * @param string|null $mainBarcode
     *
     * @return ShipmentInterface
     *
     * @example 3SDEVC2309482387
     *
     * @since   2.0.0 Strict typing
     * @see     Shipment::$barcode
     */
    public function setMainBarcode(?string $mainBarcode): ShipmentInterface
    {
        $this->mainBarcode = $mainBarcode;

        return $this;
    }

    /**
     * Get shipment amount.
     *
     * @return int|null
     *
     * @since 2.0.0 Strict typing
     * @see   Shipment::$shipmentAmount
     */
    public function getShipmentAmount(): ?int
    {
        return $this->shipmentAmount;
    }

    /**
     * Set shipment amount.
     *
     * @pattern ^\d{0,10}$
     *
     * @param int|float|string|null $shipmentAmount
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 1
     *
     * @since   2.0.0 Strict typing
     * @see     Shipment::$shipmentAmount
     */
    public function setShipmentAmount($shipmentAmount): ShipmentInterface
    {
        $this->shipmentAmount = $this->validate->integer($shipmentAmount);

        return $this;
    }

    /**
     * Get shipment counter.
     *
     * @return int|null
     *
     * @since 2.0.0 Strict typing
     * @see   Shipment::$shipmentCounter
     */
    public function getShipmentCounter(): ?int
    {
        return $this->shipmentCounter;
    }

    /**
     * Set shipment counter.
     *
     * @pattern ^\d{0,10}$
     *
     * @param int|float|string|null $shipmentCounter
     *
     * @return ShipmentInterface
     *
     * @throws InvalidArgumentException
     *
     * @example 1
     *
     * @since   2.0.0 Strict typing
     * @see     Shipment::$shipmentCounter
     */
    public function setShipmentCounter($shipmentCounter): ShipmentInterface
    {
        $this->shipmentCounter = $this->validate->integer($shipmentCounter);

        return $this;
    }

    /**
     * Get customer.
     *
     * @return CustomerInterface|null
     *
     * @since 2.0.0 Strict typing
     * @see   Customer
     */
    public function getCustomer(): ?CustomerInterface
    {
        return $this->customer;
    }

    /**
     * Set customer.
     *
     * @pattern N/A
     *
     * @param CustomerInterface|null $customer
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   2.0.0 Strict typing
     * @see     Customer
     */
    public function setCustomer(?CustomerInterface $customer): ShipmentInterface
    {
        $this->customer = $customer;

        return $this;
    }

    /**
     * Get product code.
     *
     * @return string|null
     *
     * @since 2.0.0 Strict typing
     * @see   Shipment::$productCode
     */
    public function getProductCode(): ?string
    {
        return $this->productCode;
    }

    /**
     * Set product code.
     *
     * @pattern ^.{0,35}$
     *
     * @param string|null $productCode
     *
     * @return ShipmentInterface
     *
     * @example 003085
     *
     * @since   2.0.0 Strict typing
     * @see     Shipment::$productCode
     */
    public function setProductCode(?string $productCode): ShipmentInterface
    {
        $this->productCode = $productCode;

        return $this;
    }

    /**
     * Get product description.
     *
     * @return string|null
     *
     * @since 2.0.0 Strict typing
     * @see   Shipment::$productDescription
     */
    public function getProductDescription(): ?string
    {
        return $this->productDescription;
    }

    /**
     * Set product description.
     *
     * @pattern ^.{0,95}$
     *
     * @param string|null $productDescription
     *
     * @return ShipmentInterface
     *
     * @example Standaardzending
     *
     * @since   2.0.0 Strict typing
     * @see     Shipment::$productDescription
     */
    public function setProductDescription(?string $productDescription): ShipmentInterface
    {
        $this->productDescription = $productDescription;

        return $this;
    }

    /**
     * Get addresses.
     *
     * @return AddressInterface[]|null
     *
     * @since 2.0.0 Strict typing
     * @see   Address
     */
    public function getAddress(): ?array
    {
        return $this->address;
    }

    /**
     * Set addresses.
     *
     * @pattern N/A
     *
     * @param AddressInterface[]|null $address
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   2.0.0 Strict typing
     * @see     Address
     */
    public function setAddress(?array $address): ShipmentInterface
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Get events.
     *
     * @return EventInterface[]|null
     *
     * @since 2.0.0 Strict typing
     * @see   Event
     */
    public function getEvent(): ?array
    {
        return $this->event;
    }

    /**
     * Set events.
     *
     * @pattern N/A
     *
     * @param EventInterface[]|null $event
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   2.0.0 Strict typing
     * @see     Event
     */
    public function setEvent(?array $event): ShipmentInterface
    {
        $this->event = $event;

        return $this;
    }

    /**
     * Get status.
     *
     * @return StatusInterface|null
     *
     * @since 2.0.0 Strict typing
     * @see   Status
     */
    public function getStatus(): ?StatusInterface
    {
        return $this->status;
    }

    /**
     * Set status.
     *
     * @pattern N/A
     *
     * @param StatusInterface|null $status
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   2.0.0 Strict typing
     * @see     Status
     */
    public function setStatus(?StatusInterface $status): ShipmentInterface
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Get old statuses.
     *
     * @return OldStatusInterface[]|null
     *
     * @since 2.0.0 Strict typing
     * @see   OldStatus
     */
    public function getOldStatus(): ?array
    {
        return $this->oldStatus;
    }

    /**
     * Set old status.
     *
     * @pattern N/A
     *
     * @param OldStatusInterface[]|null $oldStatus
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   2.0.0 Strict typing
     * @see     OldStatus
     */
    public function setOldStatus(?array $oldStatus): ShipmentInterface
    {
        $this->oldStatus = $oldStatus;

        return $this;
    }

    /**
     * Get labels.
     *
     * @return LabelInterface[]|null
     *
     * @since 2.0.0 Strict typing
     * @see   Label
     */
    public function getLabels(): ?array
    {
        return $this->labels;
    }

    /**
     * Add label.
     *
     * @param LabelInterface $label
     *
     * @return ShipmentInterface
     *
     * @since 2.0.0
     * @see   Label
     * @see   Label
     */
    public function addLabel(LabelInterface $label): ShipmentInterface
    {
        $this->labels[] = $label;

        return $this;
    }

    /**
     * Set labels.
     *
     * @pattern N/A
     *
     * @param LabelInterface[]|null $labels
     *
     * @return ShipmentInterface
     *
     * @example N/A
     *
     * @since   2.0.0 Strict typing
     * @see     Label
     */
    public function setLabels(?array $labels): ShipmentInterface
    {
        $this->labels = $labels;

        return $this;
    }
}
